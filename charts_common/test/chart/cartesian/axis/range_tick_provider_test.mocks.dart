// Mocks generated by Mockito 5.4.4 from annotations
// in nimble_charts_common/test/chart/cartesian/axis/range_tick_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;
import 'package:nimble_charts_common/src/common/graphics_factory.dart' as _i6;
import 'package:nimble_charts_common/src/common/line_style.dart' as _i2;
import 'package:nimble_charts_common/src/common/text_element.dart' as _i4;
import 'package:nimble_charts_common/src/common/text_measurement.dart' as _i5;
import 'package:nimble_charts_common/src/common/text_style.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeLineStyle_0 extends _i1.SmartFake implements _i2.LineStyle {
  _FakeLineStyle_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTextStyle_1 extends _i1.SmartFake implements _i3.TextStyle {
  _FakeTextStyle_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTextElement_2 extends _i1.SmartFake implements _i4.TextElement {
  _FakeTextElement_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTextMeasurement_3 extends _i1.SmartFake
    implements _i5.TextMeasurement {
  _FakeTextMeasurement_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GraphicsFactory].
///
/// See the documentation for Mockito's code generation for more information.
class MockGraphicsFactory extends _i1.Mock implements _i6.GraphicsFactory {
  MockGraphicsFactory() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.LineStyle createLinePaint() => (super.noSuchMethod(
        Invocation.method(
          #createLinePaint,
          [],
        ),
        returnValue: _FakeLineStyle_0(
          this,
          Invocation.method(
            #createLinePaint,
            [],
          ),
        ),
      ) as _i2.LineStyle);

  @override
  _i3.TextStyle createTextPaint() => (super.noSuchMethod(
        Invocation.method(
          #createTextPaint,
          [],
        ),
        returnValue: _FakeTextStyle_1(
          this,
          Invocation.method(
            #createTextPaint,
            [],
          ),
        ),
      ) as _i3.TextStyle);

  @override
  _i4.TextElement createTextElement(String? text) => (super.noSuchMethod(
        Invocation.method(
          #createTextElement,
          [text],
        ),
        returnValue: _FakeTextElement_2(
          this,
          Invocation.method(
            #createTextElement,
            [text],
          ),
        ),
      ) as _i4.TextElement);
}

/// A class which mocks [TextElement].
///
/// See the documentation for Mockito's code generation for more information.
class MockTextElement extends _i1.Mock implements _i4.TextElement {
  MockTextElement() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set textStyle(_i3.TextStyle? value) => super.noSuchMethod(
        Invocation.setter(
          #textStyle,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set maxWidth(int? value) => super.noSuchMethod(
        Invocation.setter(
          #maxWidth,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set maxWidthStrategy(_i4.MaxWidthStrategy? maxWidthStrategy) =>
      super.noSuchMethod(
        Invocation.setter(
          #maxWidthStrategy,
          maxWidthStrategy,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set opacity(double? opacity) => super.noSuchMethod(
        Invocation.setter(
          #opacity,
          opacity,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get text => (super.noSuchMethod(
        Invocation.getter(#text),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.getter(#text),
        ),
      ) as String);

  @override
  _i5.TextMeasurement get measurement => (super.noSuchMethod(
        Invocation.getter(#measurement),
        returnValue: _FakeTextMeasurement_3(
          this,
          Invocation.getter(#measurement),
        ),
      ) as _i5.TextMeasurement);

  @override
  _i4.TextDirection get textDirection => (super.noSuchMethod(
        Invocation.getter(#textDirection),
        returnValue: _i4.TextDirection.ltr,
      ) as _i4.TextDirection);

  @override
  set textDirection(_i4.TextDirection? direction) => super.noSuchMethod(
        Invocation.setter(
          #textDirection,
          direction,
        ),
        returnValueForMissingStub: null,
      );
}
